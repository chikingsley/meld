hume_voice_react:
  name: "@humeai/voice-react"
  description: "Integrate Hume's Empathic Voice Interface in your React application"
  overview: |
    This package streamlines state management for building client-side applications using the EVI Chat WebSocket through a `<VoiceProvider>` component and `useVoice()` hook. It provides a WebSocket, Microphone Interface, Audio Playback Queue, and Message History.

    Note: This package uses Web APIs for microphone input and audio playback that are not compatible with React Native.
  prerequisites:
    - requirement: "Node.js v18.0.0 or higher"
      verification_command: "node --version"
      upgrade_guide: "Visit the Node.js official site or use a version management tool like nvm."
  installation:
    command: "npm install @humeai/voice-react"
    import_example: "import { VoiceProvider } from '@humeai/voice-react';"
  usage:
    quickstart:
      description: "Wrap components in `VoiceProvider` to access voice methods. Example:"
      example: |
        ```tsx
        import { VoiceProvider } from '@humeai/voice-react';

        function App() {
          const apiKey = process.env.HUME_API_KEY;

          return (
            <VoiceProvider
              auth={{ type: 'apiKey', value: apiKey }}
              configId={/* Optional: Your EVI Configuration ID */}
            >
              {/* ... */}
            </VoiceProvider>
          );
        }
        ```
    voice_provider_config:
      description: "Props accepted by `VoiceProvider`:"
      props:
        - name: "auth"
          type: "{value: string; type: 'apiKey';} | {value: string; type: 'accessToken';}"
          required: true
          description: "Authentication strategy and value."
        - name: "hostname"
          type: "string"
          required: false
          default: '"api.hume.ai"'
          description: "Hostname of the Hume API."
        - name: "reconnectAttempts"
          type: "number"
          required: false
          default: "30"
          description: "Number of reconnect attempts."
        - name: "debug"
          type: "boolean"
          required: false
          default: "false"
          description: "Enable debug mode."
        - name: "configId"
          type: "string"
          required: false
          description: "Configuration ID with voice presets."
        - name: "configVersion"
          type: "string"
          required: false
          description: "Specific version of your config."
        - name: "verboseTranscription"
          type: "boolean"
          required: false
          default: true
          description: "Enable verbose transcription for interim user transcripts."
        - name: "onMessage"
          type: "(message: JsonMessage & { receivedAt: Date;}) => void"
          required: false
          description: "Callback on message."
        - name: "onToolCall"
          type: "ToolCallHandler"
          required: false
          description: "Callback on tool call. Returns string to send as a ToolResponseMessage."
        - name: "onAudioReceived"
          type: "(message: AudioOutputMessage) => void"
          required: false
          description: "Callback when audio is received."
        - name: "onAudioStart"
          type: "(clipId: string) => void"
          required: false
          description: "Callback when audio clip starts."
        - name: "onAudioEnd"
          type: "(clipId: string) => void"
          required: false
          description: "Callback when audio clip ends."
        - name: "onInterruption"
          type: "(clipId: string) => void"
          required: false
          description: "Callback when assistant is interrupted."
        - name: "onClose"
          type: "(event: CloseEvent) => void"
          required: false
          description: "Callback on socket close."
        - name: "clearMessagesOnDisconnect"
          type: "boolean"
          required: false
          description: "Clear message history on disconnect."
        - name: "messageHistoryLimit"
          type: "number"
          required: false
          default: "100"
          description: "Max message history length."
        - name: "sessionSettings"
          type: "SessionSettings"
          required: false
          description: "Custom settings for the session."
        - name: "resumedGroupChatId"
          type: "string"
          required: false
          description: "Chat group ID to continue a previous chat."
    using_the_voice:
      description: "Use the `useVoice` hook in child components of `VoiceProvider`. Example:"
      example: |
        ```tsx
        import { useVoice } from '@humeai/voice-react';

        export function StartCallButton() {
          const { connect } = useVoice();

          return <button onClick={() => connect()}>Start Call</button>;
        }
        ```
      important_note: |
        The React SDK uses AudioContext API, which must be initialized by a user gesture.
          CORRECT: call `connect` on button click. 
          INCORRECT: call `connect` in `useEffect` on component mount.
      methods:
        - name: "connect"
          signature: "() => Promise"
          description: "Open socket and init microphone."
        - name: "disconnect"
          signature: "() => void"
          description: "Disconnect socket and microphone."
        - name: "clearMessages"
          signature: "() => void"
          description: "Clear transcript messages from history."
        - name: "mute"
          signature: "() => void"
          description: "Mute the microphone"
        - name: "unmute"
          signature: "() => void"
          description: "Unmute the microphone"
        - name: "muteAudio"
          signature: "() => void"
          description: "Mute the assistant audio"
        - name: "unmuteAudio"
          signature: "() => void"
          description: "Unmute the assistant audio"
        - name: "sendSessionSettings"
          signature: "(message: SessionSettings) => void"
          description: "Send new session settings."
        - name: "sendUserInput"
          signature: "(text: string) => void"
          description: "Send a user input message."
        - name: "sendAssistantInput"
          signature: "(text: string) => void"
          description: "Send a text for the assistant to read out loud."
        - name: "sendToolMessage"
          signature: "(toolMessage: ToolResponse | ToolError) => void"
          description: "Send a tool response or error message."
        - name: "pauseAssistant"
          signature: "() => void"
          description: "Pauses responses. Chat history is saved."
        - name: "resumeAssistant"
          signature: "() => void"
          description: "Resumes responses. History sent while paused will be sent."
      properties:
        - name: "isMuted"
          type: "boolean"
          description: "Is microphone muted?"
        - name: "isAudioMuted"
          type: "boolean"
          description: "Is assistant audio muted?"
        - name: "isPlaying"
          type: "boolean"
          description: "Is assistant audio playing?"
        - name: "isPaused"
          type: "boolean"
          description: "Is assistant paused?"
        - name: "fft"
          type: "number[]"
          description: "Assistant audio FFT values."
        - name: "micFft"
          type: "number[]"
          description: "Microphone input FFT values."
        - name: "messages"
          type: "UserTranscriptMessage | AssistantTranscriptMessage | ConnectionMessage | UserInterruptionMessage | JSONErrorMessage"
          description: "Current conversation message history. May not include interim user messages."
        - name: "lastVoiceMessage"
          type: "AssistantTranscriptMessage | null"
          description: "Last assistant transcript message."
        - name: "lastUserMessage"
          type: "UserTranscriptMessage | null"
          description: "Last user transcript message."
        - name: "readyState"
          type: "VoiceReadyState"
          description: "Websocket connection ready state."
        - name: "status"
          type: "VoiceStatus"
          description: "Voice connection status: connected, disconnected, connecting, or error."
        - name: "error"
          type: "VoiceError"
          description: "Detailed error information if voice is in error state."
        - name: "isError"
          type: "boolean"
          description: "Is the voice in an error state?"
        - name: "isAudioError"
          type: "boolean"
          description: "Has an audio playback error occurred?"
        - name: "isMicrophoneError"
          type: "boolean"
          description: "Has a microphone error occurred?"
        - name: "isSocketError"
          type: "boolean"
          description: "Was there an error connecting to the websocket?"
        - name: "callDurationTimestamp"
          type: "string | null"
          description: "Length of call, persists after conversation ends."
        - name: "toolStatusStore"
          type: "Record<string, { call?: ToolCall; resolved?: ToolResponse | ToolError }>"
          description: "Tool call IDs to their tool messages."
        - name: "chatMetadata"
          type: "ChatMetadataMessage | null"
          description: "Metadata about current chat."
        - name: "playerQueueLength"
          type: "number"
          description: "Number of assistant audio clips queued."
